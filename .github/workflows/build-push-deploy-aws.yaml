name: Build Push & Deploy Docker Image- AWS CLI
run-name: Build Push & Deploy Docker Image ${{ github.event.inputs.tag}}

on:
      workflow_dispatch:
        inputs:
          tag:
            description: Image tag
            type: string
            required: true
jobs:
  AWSDeploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: ap-south-1

      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push Docker image to ECR
        env:
            ECR_REPOSITORY: dev/test
            IMAGE_TAG: ${{ github.event.inputs.tag}}
        run: |
            docker build -t $ECR_REPOSITORY:$IMAGE_TAG ./super-service/
            docker tag $ECR_REPOSITORY:$IMAGE_TAG ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG
            docker push ${{ steps.login-ecr.outputs.registry }}/$ECR_REPOSITORY:$IMAGE_TAG
               

      - name: Deploy to AWS App Runner
        env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REPOSITORY: dev/test
            IMAGE_TAG: ${{ github.event.inputs.tag}}
        run: |
            
            aws apprunner update-service \
            --service-arn arn:aws:apprunner:ap-south-1:985636103691:service/testservice/069d92e58cfd463f946552a79b5da8b8 \
            --source-configuration '{
              "ImageRepository": {
                "ImageIdentifier": "${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY}}:${{ env.IMAGE_TAG}}",
                "ImageRepositoryType": "ECR",
                "ImageConfiguration": {
                  "Port": "80"
                    }
                },
                "AutoDeploymentsEnabled": true
            }'
